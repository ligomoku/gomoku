import { piotr } from './piotr';
export { sanWriter } from './sanWriter';
export const initialFen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';
export function fixCrazySan(san) {
    return san[0] === 'P' ? san.slice(1) : san;
}
export function readDests(lines) {
    if (typeof lines === 'undefined')
        return null;
    const dests = new Map();
    if (lines)
        for (const line of lines.split(' ')) {
            dests.set(piotr[line[0]], line
                .slice(1)
                .split('')
                .map(c => piotr[c]));
        }
    return dests;
}
export function readDrops(line) {
    if (typeof line === 'undefined' || line === null)
        return null;
    return line.match(/.{2}/g) || [];
}
export const altCastles = {
    e1a1: 'e1c1',
    e1h1: 'e1g1',
    e8a8: 'e8c8',
    e8h8: 'e8g8',
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFaEMsT0FBTyxFQUFpQixTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFdkQsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFRLDBEQUEwRCxDQUFDO0FBRTFGLE1BQU0sVUFBVSxXQUFXLENBQUMsR0FBUTtJQUNsQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztBQUM3QyxDQUFDO0FBSUQsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUFjO0lBQ3RDLElBQUksT0FBTyxLQUFLLEtBQUssV0FBVztRQUFFLE9BQU8sSUFBSSxDQUFDO0lBQzlDLE1BQU0sS0FBSyxHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7SUFDeEIsSUFBSSxLQUFLO1FBQ1AsS0FBSyxNQUFNLElBQUksSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ25DLEtBQUssQ0FBQyxHQUFHLENBQ1AsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUNkLElBQUk7aUJBQ0QsS0FBSyxDQUFDLENBQUMsQ0FBQztpQkFDUixLQUFLLENBQUMsRUFBRSxDQUFDO2lCQUNULEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUN0QixDQUFDO1NBQ0g7SUFDSCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUFFRCxNQUFNLFVBQVUsU0FBUyxDQUFDLElBQW9CO0lBQzVDLElBQUksT0FBTyxJQUFJLEtBQUssV0FBVyxJQUFJLElBQUksS0FBSyxJQUFJO1FBQUUsT0FBTyxJQUFJLENBQUM7SUFDOUQsT0FBUSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBVyxJQUFJLEVBQUUsQ0FBQztBQUM5QyxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHO0lBQ3hCLElBQUksRUFBRSxNQUFNO0lBQ1osSUFBSSxFQUFFLE1BQU07SUFDWixJQUFJLEVBQUUsTUFBTTtJQUNaLElBQUksRUFBRSxNQUFNO0NBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBpb3RyIH0gZnJvbSAnLi9waW90cic7XG5cbmV4cG9ydCB7IHR5cGUgU2FuVG9VY2ksIHNhbldyaXRlciB9IGZyb20gJy4vc2FuV3JpdGVyJztcblxuZXhwb3J0IGNvbnN0IGluaXRpYWxGZW46IEZlbiA9ICdybmJxa2Juci9wcHBwcHBwcC84LzgvOC84L1BQUFBQUFBQL1JOQlFLQk5SIHcgS1FrcSAtIDAgMSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBmaXhDcmF6eVNhbihzYW46IFNhbik6IFNhbiB7XG4gIHJldHVybiBzYW5bMF0gPT09ICdQJyA/IHNhbi5zbGljZSgxKSA6IHNhbjtcbn1cblxuZXhwb3J0IHR5cGUgRGVzdHMgPSBNYXA8S2V5LCBLZXlbXT47XG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkRGVzdHMobGluZXM/OiBzdHJpbmcpOiBEZXN0cyB8IG51bGwge1xuICBpZiAodHlwZW9mIGxpbmVzID09PSAndW5kZWZpbmVkJykgcmV0dXJuIG51bGw7XG4gIGNvbnN0IGRlc3RzID0gbmV3IE1hcCgpO1xuICBpZiAobGluZXMpXG4gICAgZm9yIChjb25zdCBsaW5lIG9mIGxpbmVzLnNwbGl0KCcgJykpIHtcbiAgICAgIGRlc3RzLnNldChcbiAgICAgICAgcGlvdHJbbGluZVswXV0sXG4gICAgICAgIGxpbmVcbiAgICAgICAgICAuc2xpY2UoMSlcbiAgICAgICAgICAuc3BsaXQoJycpXG4gICAgICAgICAgLm1hcChjID0+IHBpb3RyW2NdKVxuICAgICAgKTtcbiAgICB9XG4gIHJldHVybiBkZXN0cztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWREcm9wcyhsaW5lPzogc3RyaW5nIHwgbnVsbCk6IEtleVtdIHwgbnVsbCB7XG4gIGlmICh0eXBlb2YgbGluZSA9PT0gJ3VuZGVmaW5lZCcgfHwgbGluZSA9PT0gbnVsbCkgcmV0dXJuIG51bGw7XG4gIHJldHVybiAobGluZS5tYXRjaCgvLnsyfS9nKSBhcyBLZXlbXSkgfHwgW107XG59XG5cbmV4cG9ydCBjb25zdCBhbHRDYXN0bGVzID0ge1xuICBlMWExOiAnZTFjMScsXG4gIGUxaDE6ICdlMWcxJyxcbiAgZThhODogJ2U4YzgnLFxuICBlOGg4OiAnZThnOCcsXG59O1xuIl19