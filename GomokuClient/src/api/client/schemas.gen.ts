// This file is auto-generated by @hey-api/openapi-ts

export const CreateGameRequestSchema = {
  required: ["boardSize"],
  type: "object",
  properties: {
    boardSize: {
      type: "integer",
      format: "int32",
    },
  },
  additionalProperties: false,
} as const;

export const CreateGameResponseSchema = {
  required: ["gameId"],
  type: "object",
  properties: {
    gameId: {
      minLength: 1,
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const CreatePlayerRequestSchema = {
  required: ["id"],
  type: "object",
  properties: {
    id: {
      minLength: 1,
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const GameMoveDtoSchema = {
  required: ["moveNumber", "playerId", "tile"],
  type: "object",
  properties: {
    tile: {
      $ref: "#/components/schemas/TileDto",
    },
    playerId: {
      minLength: 1,
      type: "string",
    },
    moveNumber: {
      type: "integer",
      format: "int32",
    },
  },
  additionalProperties: false,
} as const;

export const GetAvailableGamesResponseSchema = {
  required: ["gameId"],
  type: "object",
  properties: {
    gameId: {
      minLength: 1,
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const GetGameResponseSchema = {
  required: ["gameId", "hasBothPlayersJoined", "isGameStarted", "playersMoves"],
  type: "object",
  properties: {
    gameId: {
      minLength: 1,
      type: "string",
    },
    playerOne: {
      $ref: "#/components/schemas/PlayerDto",
    },
    playerTwo: {
      $ref: "#/components/schemas/PlayerDto",
    },
    hasBothPlayersJoined: {
      type: "boolean",
    },
    isGameStarted: {
      type: "boolean",
    },
    nextMoveShouldMakePlayerId: {
      type: "string",
      nullable: true,
    },
    winnerId: {
      type: "string",
      nullable: true,
    },
    winningSequence: {
      type: "array",
      items: {
        $ref: "#/components/schemas/TileDto",
      },
      nullable: true,
    },
    playersMoves: {
      type: "array",
      items: {
        $ref: "#/components/schemas/GameMoveDto",
      },
    },
  },
  additionalProperties: false,
} as const;

export const MakeMoveRequestSchema = {
  required: ["x", "y"],
  type: "object",
  properties: {
    x: {
      type: "integer",
      format: "int32",
    },
    y: {
      type: "integer",
      format: "int32",
    },
  },
  additionalProperties: false,
} as const;

export const PlaceTileResponseSchema = {
  type: "object",
  properties: {
    winningSequence: {
      type: "array",
      items: {
        $ref: "#/components/schemas/TileDto",
      },
      nullable: true,
    },
    isWinningMove: {
      type: "boolean",
      readOnly: true,
    },
  },
  additionalProperties: false,
} as const;

export const PlayerDtoSchema = {
  required: ["playerId"],
  type: "object",
  properties: {
    playerId: {
      minLength: 1,
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const ProblemDetailsSchema = {
  type: "object",
  properties: {
    type: {
      type: "string",
      nullable: true,
    },
    title: {
      type: "string",
      nullable: true,
    },
    status: {
      type: "integer",
      format: "int32",
      nullable: true,
    },
    detail: {
      type: "string",
      nullable: true,
    },
    instance: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: {},
} as const;

export const TileDtoSchema = {
  required: ["x", "y"],
  type: "object",
  properties: {
    x: {
      type: "integer",
      format: "int32",
    },
    y: {
      type: "integer",
      format: "int32",
    },
  },
  additionalProperties: false,
} as const;