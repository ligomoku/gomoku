{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst apiURI = 'http://localhost:62411/api/game/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class UserplayService {\n  http;\n  constructor(http) {\n    this.http = http;\n  }\n  getGameInfo() {\n    return this.http.get(apiURI);\n  }\n  userPlayed(move) {\n    this.http.post(apiURI, move, httpOptions).subscribe(msg => console.log(msg));\n  }\n  getLastMove(gameId) {\n    return this.http.get(apiURI + gameId);\n  }\n  static ɵfac = function UserplayService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || UserplayService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserplayService,\n    factory: UserplayService.ɵfac\n  });\n}","map":{"version":3,"names":["HttpClient","HttpHeaders","apiURI","httpOptions","headers","UserplayService","http","constructor","getGameInfo","get","userPlayed","move","post","subscribe","msg","console","log","getLastMove","gameId","i0","ɵɵinject","i1","factory","ɵfac"],"sources":["/Users/kuprins/Desktop/Coding/gomoku/Gomoku/GomokuClient/src/app/userplay.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Move } from './move';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { GameInfo } from './game-info';\n\nconst apiURI: string = 'http://localhost:62411/api/game/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\n@Injectable()\nexport class UserplayService {\n\n  constructor(private http: HttpClient) { }\n\n  getGameInfo() {\n    return this.http.get<GameInfo>(apiURI);\n  }\n\n  userPlayed(move: Move) {\n    this.http.post(apiURI , move, httpOptions)\n    .subscribe(msg => console.log(msg));\n  }\n\n  getLastMove(gameId: number) {\n    return this.http.get<Move>(apiURI + gameId);\n  }\n}\n"],"mappings":"AAEA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAASC,WAAW,QAAQ,sBAAsB;;;AAGlD,MAAMC,MAAM,GAAW,kCAAkC;AACzD,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IACvB,cAAc,EAAG;GAClB;CACF;AAGD,OAAM,MAAOI,eAAe;EAENC,IAAA;EAApBC,YAAoBD,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAWP,MAAM,CAAC;EACxC;EAEAQ,UAAUA,CAACC,IAAU;IACnB,IAAI,CAACL,IAAI,CAACM,IAAI,CAACV,MAAM,EAAGS,IAAI,EAAER,WAAW,CAAC,CACzCU,SAAS,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC;EAEAG,WAAWA,CAACC,MAAc;IACxB,OAAO,IAAI,CAACZ,IAAI,CAACG,GAAG,CAAOP,MAAM,GAAGgB,MAAM,CAAC;EAC7C;;qCAfWb,eAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAArB,UAAA;EAAA;;WAAfK,eAAe;IAAAiB,OAAA,EAAfjB,eAAe,CAAAkB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}