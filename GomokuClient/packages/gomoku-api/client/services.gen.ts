// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
} from "@hey-api/client-fetch";
import type {
  GetApiGameAnonymousByGameIdHistoryData,
  GetApiGameAnonymousByGameIdHistoryError,
  GetApiGameAnonymousByGameIdHistoryResponse,
  GetApiGameAnonymousAvailableToJoinData,
  GetApiGameAnonymousAvailableToJoinError,
  GetApiGameAnonymousAvailableToJoinResponse,
  GetApiGameAnonymousActiveData,
  GetApiGameAnonymousActiveError,
  GetApiGameAnonymousActiveResponse,
  PostApiGameAnonymousData,
  PostApiGameAnonymousError,
  PostApiGameAnonymousResponse,
  PostApiGameAnonymousByGameIdJoinData,
  PostApiGameAnonymousByGameIdJoinError,
  PostApiGameAnonymousByGameIdJoinResponse,
  GetHealthData,
  GetHealthError,
  GetHealthResponse,
  GetApiProfilesByUserNameGamesData,
  GetApiProfilesByUserNameGamesError,
  GetApiProfilesByUserNameGamesResponse,
  GetApiV1RapfiTestData,
  GetApiV1RapfiTestError,
  GetApiV1RapfiTestResponse,
  GetApiGameRegisteredByGameIdHistoryData,
  GetApiGameRegisteredByGameIdHistoryError,
  GetApiGameRegisteredByGameIdHistoryResponse,
  GetApiGameRegisteredAvailableToJoinData,
  GetApiGameRegisteredAvailableToJoinError,
  GetApiGameRegisteredAvailableToJoinResponse,
  GetApiGameRegisteredActiveData,
  GetApiGameRegisteredActiveError,
  GetApiGameRegisteredActiveResponse,
  PostApiGameRegisteredData,
  PostApiGameRegisteredError,
  PostApiGameRegisteredResponse,
  PostApiGameRegisteredByGameIdJoinData,
  PostApiGameRegisteredByGameIdJoinError,
  PostApiGameRegisteredByGameIdJoinResponse,
  PostGamehubAnonymousJoinGameGroupData,
  PostGamehubAnonymousGetClockData,
  PostGamehubAnonymousMakeMoveData,
  PostGamehubAnonymousRequestUndoData,
  PostGamehubAnonymousApproveUndoData,
  PostGamehubAnonymousResignData,
  PostGamehubAnonymousRequestRematchData,
  PostGamehubAnonymousApproveRematchData,
  PostGamehubAnonymousSendMessageData,
  PostGamehubAnonymousSendInvitationToPlayData,
  PostGamehubRegisteredJoinGameGroupData,
  PostGamehubRegisteredGetClockData,
  PostGamehubRegisteredMakeMoveData,
  PostGamehubRegisteredRequestUndoData,
  PostGamehubRegisteredApproveUndoData,
  PostGamehubRegisteredResignData,
  PostGamehubRegisteredRequestRematchData,
  PostGamehubRegisteredApproveRematchData,
  PostGamehubRegisteredSendMessageData,
  PostGamehubRegisteredSendInvitationToPlayData,
} from "./types.gen";

export const client = createClient(createConfig());

export const getApiGameAnonymousByGameIdHistory = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiGameAnonymousByGameIdHistoryData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiGameAnonymousByGameIdHistoryResponse,
    GetApiGameAnonymousByGameIdHistoryError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/anonymous/{gameId}/history",
  });
};

export const getApiGameAnonymousAvailableToJoin = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiGameAnonymousAvailableToJoinData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiGameAnonymousAvailableToJoinResponse,
    GetApiGameAnonymousAvailableToJoinError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/anonymous/available-to-join",
  });
};

export const getApiGameAnonymousActive = <ThrowOnError extends boolean = false>(
  options: Options<GetApiGameAnonymousActiveData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiGameAnonymousActiveResponse,
    GetApiGameAnonymousActiveError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/anonymous/active",
  });
};

export const postApiGameAnonymous = <ThrowOnError extends boolean = false>(
  options: Options<PostApiGameAnonymousData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostApiGameAnonymousResponse,
    PostApiGameAnonymousError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/anonymous",
  });
};

/**
 * Join game
 */
export const postApiGameAnonymousByGameIdJoin = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiGameAnonymousByGameIdJoinData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostApiGameAnonymousByGameIdJoinResponse,
    PostApiGameAnonymousByGameIdJoinError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/anonymous/{gameId}/join",
  });
};

/**
 * Health check endpoint
 */
export const getHealth = <ThrowOnError extends boolean = false>(
  options: Options<GetHealthData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetHealthResponse,
    GetHealthError,
    ThrowOnError
  >({
    ...options,
    url: "/health",
  });
};

/**
 * Get games for specific user
 */
export const getApiProfilesByUserNameGames = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiProfilesByUserNameGamesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiProfilesByUserNameGamesResponse,
    GetApiProfilesByUserNameGamesError,
    ThrowOnError
  >({
    ...options,
    url: "/api/profiles/{userName}/games",
  });
};

/**
 * Test connection with Rapfi engine
 */
export const getApiV1RapfiTest = <ThrowOnError extends boolean = false>(
  options: Options<GetApiV1RapfiTestData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiV1RapfiTestResponse,
    GetApiV1RapfiTestError,
    ThrowOnError
  >({
    ...options,
    url: "/api/v1/rapfi/test",
  });
};

export const getApiGameRegisteredByGameIdHistory = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiGameRegisteredByGameIdHistoryData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiGameRegisteredByGameIdHistoryResponse,
    GetApiGameRegisteredByGameIdHistoryError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/registered/{gameId}/history",
  });
};

export const getApiGameRegisteredAvailableToJoin = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiGameRegisteredAvailableToJoinData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiGameRegisteredAvailableToJoinResponse,
    GetApiGameRegisteredAvailableToJoinError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/registered/available-to-join",
  });
};

export const getApiGameRegisteredActive = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetApiGameRegisteredActiveData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiGameRegisteredActiveResponse,
    GetApiGameRegisteredActiveError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/registered/active",
  });
};

export const postApiGameRegistered = <ThrowOnError extends boolean = false>(
  options: Options<PostApiGameRegisteredData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostApiGameRegisteredResponse,
    PostApiGameRegisteredError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/registered",
  });
};

/**
 * Join game
 */
export const postApiGameRegisteredByGameIdJoin = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiGameRegisteredByGameIdJoinData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostApiGameRegisteredByGameIdJoinResponse,
    PostApiGameRegisteredByGameIdJoinError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/registered/{gameId}/join",
  });
};

export const postGamehubAnonymousJoinGameGroup = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubAnonymousJoinGameGroupData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/anonymous/JoinGameGroup",
  });
};

export const postGamehubAnonymousGetClock = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubAnonymousGetClockData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/anonymous/GetClock",
  });
};

export const postGamehubAnonymousMakeMove = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubAnonymousMakeMoveData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/anonymous/MakeMove",
  });
};

export const postGamehubAnonymousRequestUndo = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubAnonymousRequestUndoData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/anonymous/RequestUndo",
  });
};

export const postGamehubAnonymousApproveUndo = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubAnonymousApproveUndoData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/anonymous/ApproveUndo",
  });
};

export const postGamehubAnonymousResign = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubAnonymousResignData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/anonymous/Resign",
  });
};

export const postGamehubAnonymousRequestRematch = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubAnonymousRequestRematchData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/anonymous/RequestRematch",
  });
};

export const postGamehubAnonymousApproveRematch = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubAnonymousApproveRematchData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/anonymous/ApproveRematch",
  });
};

export const postGamehubAnonymousSendMessage = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubAnonymousSendMessageData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/anonymous/SendMessage",
  });
};

export const postGamehubAnonymousSendInvitationToPlay = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubAnonymousSendInvitationToPlayData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/anonymous/SendInvitationToPlay",
  });
};

export const postGamehubRegisteredJoinGameGroup = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubRegisteredJoinGameGroupData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/registered/JoinGameGroup",
  });
};

export const postGamehubRegisteredGetClock = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubRegisteredGetClockData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/registered/GetClock",
  });
};

export const postGamehubRegisteredMakeMove = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubRegisteredMakeMoveData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/registered/MakeMove",
  });
};

export const postGamehubRegisteredRequestUndo = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubRegisteredRequestUndoData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/registered/RequestUndo",
  });
};

export const postGamehubRegisteredApproveUndo = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubRegisteredApproveUndoData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/registered/ApproveUndo",
  });
};

export const postGamehubRegisteredResign = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubRegisteredResignData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/registered/Resign",
  });
};

export const postGamehubRegisteredRequestRematch = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubRegisteredRequestRematchData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/registered/RequestRematch",
  });
};

export const postGamehubRegisteredApproveRematch = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubRegisteredApproveRematchData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/registered/ApproveRematch",
  });
};

export const postGamehubRegisteredSendMessage = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostGamehubRegisteredSendMessageData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/registered/SendMessage",
  });
};

export const postGamehubRegisteredSendInvitationToPlay = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<
    PostGamehubRegisteredSendInvitationToPlayData,
    ThrowOnError
  >,
) => {
  return (options?.client ?? client).post<void, unknown, ThrowOnError>({
    ...options,
    url: "/gamehub/registered/SendInvitationToPlay",
  });
};
