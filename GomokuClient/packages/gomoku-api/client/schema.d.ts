/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/game/anonymous/{gameId}/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header: {
                    "X-Version"?: string;
                    "Content-Type": string;
                };
                path: {
                    gameId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GetGameHistoryResponse"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/game/anonymous/available-to-join": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    limit?: number;
                    offset?: number;
                };
                header: {
                    "X-Version"?: string;
                    "Content-Type": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GetAvailableGamesResponseIEnumerablePaginatedResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/game/anonymous/active": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    limit?: number;
                    offset?: number;
                };
                header: {
                    "X-Version"?: string;
                    "Content-Type": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GetActiveGamesResponseIEnumerablePaginatedResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/game/anonymous": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header: {
                    "X-Version"?: string;
                    "Content-Type": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["CreateGameRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreateGameResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/game/anonymous/{gameId}/join": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Join game */
        post: {
            parameters: {
                query?: never;
                header: {
                    "X-Version"?: string;
                    "Content-Type": string;
                };
                path: {
                    gameId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["AddAnonymousPlayerToGameRequest"];
                };
            };
            responses: {
                /** @description Player with specified id successfully joined the game */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AddPlayerToGameResponse"];
                    };
                };
                /** @description Game or player with specified id not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health check endpoint */
        get: {
            parameters: {
                query?: never;
                header: {
                    "X-Version"?: string;
                    "Content-Type": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Server is running */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/{userName}/games": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get games for specific user */
        get: {
            parameters: {
                query?: {
                    limit?: number;
                    offset?: number;
                };
                header: {
                    "X-Version"?: string;
                    "Content-Type": string;
                };
                path: {
                    userName: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Information about user games */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GetGamesByUsernameResponseIEnumerablePaginatedResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/rapfi/test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Test connection with Rapfi engine */
        get: {
            parameters: {
                query?: never;
                header: {
                    "X-Version"?: string;
                    "Content-Type": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Connection successful */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Connection failed */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/game/registered/{gameId}/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header: {
                    "X-Version"?: string;
                    Authorization: string;
                    "Content-Type": string;
                };
                path: {
                    gameId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["GetGameHistoryResponse"];
                        "application/json": components["schemas"]["GetGameHistoryResponse"];
                        "text/json": components["schemas"]["GetGameHistoryResponse"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/game/registered/available-to-join": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    limit?: number;
                    offset?: number;
                };
                header: {
                    "X-Version"?: string;
                    Authorization: string;
                    "Content-Type": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["GetAvailableGamesResponseIEnumerablePaginatedResponse"];
                        "application/json": components["schemas"]["GetAvailableGamesResponseIEnumerablePaginatedResponse"];
                        "text/json": components["schemas"]["GetAvailableGamesResponseIEnumerablePaginatedResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/game/registered/active": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    limit?: number;
                    offset?: number;
                };
                header: {
                    "X-Version"?: string;
                    Authorization: string;
                    "Content-Type": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["GetActiveGamesResponseIEnumerablePaginatedResponse"];
                        "application/json": components["schemas"]["GetActiveGamesResponseIEnumerablePaginatedResponse"];
                        "text/json": components["schemas"]["GetActiveGamesResponseIEnumerablePaginatedResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/game/registered": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header: {
                    "X-Version"?: string;
                    Authorization: string;
                    "Content-Type": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["CreateGameRequest"];
                    "text/json": components["schemas"]["CreateGameRequest"];
                    "application/*+json": components["schemas"]["CreateGameRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["CreateGameResponse"];
                        "application/json": components["schemas"]["CreateGameResponse"];
                        "text/json": components["schemas"]["CreateGameResponse"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/game/registered/{gameId}/join": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Join game */
        post: {
            parameters: {
                query?: never;
                header: {
                    "X-Version"?: string;
                    Authorization: string;
                    "Content-Type": string;
                };
                path: {
                    gameId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Player with specified id successfully joined the game */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["AddPlayerToGameResponse"];
                        "application/json": components["schemas"]["AddPlayerToGameResponse"];
                        "text/json": components["schemas"]["AddPlayerToGameResponse"];
                    };
                };
                /** @description Game or player with specified id not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/anonymous/JoinGameGroup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    gameId?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/anonymous/GetClock": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["GetClockMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/anonymous/MakeMove": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["MakeMoveClientMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/anonymous/RequestUndo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["RequestUndoMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/anonymous/ApproveUndo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["ApproveUndoMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/anonymous/Resign": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["ResignClientMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/anonymous/RequestRematch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["RematchRequestMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/anonymous/ApproveRematch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["ApproveRematchMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/anonymous/SendMessage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    messageRequest?: components["schemas"]["ChatMessageClientMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/anonymous/SendInvitationToPlay": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    _?: components["schemas"]["SendInvitationToPlayMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/registered/JoinGameGroup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    gameId?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/registered/GetClock": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["GetClockMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/registered/MakeMove": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["MakeMoveClientMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/registered/RequestUndo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["RequestUndoMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/registered/ApproveUndo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["ApproveUndoMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/registered/Resign": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["ResignClientMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/registered/RequestRematch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["RematchRequestMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/registered/ApproveRematch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["ApproveRematchMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/registered/SendMessage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    messageRequest?: components["schemas"]["ChatMessageClientMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/gamehub/registered/SendInvitationToPlay": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    message?: components["schemas"]["SendInvitationToPlayMessage"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: never;
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AddAnonymousPlayerToGameRequest: {
            playerId: string | null;
        };
        AddPlayerToGameResponse: {
            gameId: string;
            playerId: string;
        };
        ApproveRematchMessage: {
            gameId: string | null;
        };
        ApproveUndoMessage: {
            gameId: string;
        };
        ChatMessageClientMessage: {
            gameId: string;
            user: string;
            message: string;
        };
        ClockDto: {
            /** Format: int64 */
            black: number;
            /** Format: int64 */
            white: number;
        };
        CreateGameRequest: {
            /** Format: int32 */
            boardSize: number;
            timeControl?: components["schemas"]["TimeControlDto"];
        };
        CreateGameResponse: {
            gameId: string;
            /** Format: int32 */
            boardSize: number;
        };
        GetActiveGamesResponse: {
            gameId: string;
            players?: components["schemas"]["PlayersDto"];
            timeControl?: components["schemas"]["TimeControlDto"];
        };
        GetActiveGamesResponseIEnumerablePaginatedResponse: {
            data: components["schemas"]["GetActiveGamesResponse"][];
            metadata: components["schemas"]["PaginationMetadata"];
        };
        GetAvailableGamesResponse: {
            gameId: string;
            opponent?: components["schemas"]["ProfileDto"];
            timeControl?: components["schemas"]["TimeControlDto"];
        };
        GetAvailableGamesResponseIEnumerablePaginatedResponse: {
            data: components["schemas"]["GetAvailableGamesResponse"][];
            metadata: components["schemas"]["PaginationMetadata"];
        };
        GetClockMessage: {
            gameId: string;
        };
        GetGameHistoryResponse: {
            /** Format: int32 */
            boardSize: number;
            gen: string;
            /** Format: int32 */
            movesCount: number;
            players: components["schemas"]["PlayersDto"];
            isGameStarted: boolean;
            hasBothPlayersJoined: boolean;
            isCompleted: boolean;
            winner?: string | null;
            winningSequence?: components["schemas"]["TileDto"][] | null;
            movesHistory: {
                [key: string]: components["schemas"]["TileDto"];
            };
            timeControl?: components["schemas"]["TimeControlDto"];
            clock?: components["schemas"]["ClockDto"];
        };
        GetGamesByUsernameResponse: {
            gameId: string;
            players: components["schemas"]["UsernamesDto"];
            isCompleted: boolean;
            winner?: string | null;
            gen: string;
            /** Format: date-time */
            date: string;
            timeControl?: components["schemas"]["TimeControlDto"];
            clock?: components["schemas"]["ClockDto"];
        };
        GetGamesByUsernameResponseIEnumerablePaginatedResponse: {
            data: components["schemas"]["GetGamesByUsernameResponse"][];
            metadata: components["schemas"]["PaginationMetadata"];
        };
        MakeMoveClientMessage: {
            gameId: string;
            /** Format: int32 */
            x: number;
            /** Format: int32 */
            y: number;
        };
        PaginationMetadata: {
            hasMoreItems: boolean;
            /** Format: int32 */
            totalCount: number;
        };
        PlayerDto: {
            playerId: string;
            userName: string;
            color: string;
        };
        PlayersDto: {
            black?: components["schemas"]["PlayerDto"];
            white?: components["schemas"]["PlayerDto"];
        };
        ProblemDetails: {
            type?: string | null;
            title?: string | null;
            /** Format: int32 */
            status?: number | null;
            detail?: string | null;
            instance?: string | null;
        } & {
            [key: string]: unknown;
        };
        ProfileDto: {
            playerId: string;
            userName: string;
        };
        RematchRequestMessage: {
            gameId: string;
        };
        RequestUndoMessage: {
            gameId: string;
        };
        ResignClientMessage: {
            gameId: string;
        };
        SendInvitationToPlayMessage: {
            playerId: string;
        };
        TileDto: {
            /** Format: int32 */
            x: number;
            /** Format: int32 */
            y: number;
        };
        TimeControlDto: {
            /** Format: int32 */
            initialTimeInSeconds: number;
            /** Format: int32 */
            incrementPerMove: number;
        };
        UsernamesDto: {
            black?: string | null;
            white?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
