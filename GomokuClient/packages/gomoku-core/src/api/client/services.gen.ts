// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
} from "@hey-api/client-fetch";
import type {
  GetApiAuthInfoData,
  GetApiAuthInfoError,
  GetApiAuthInfoResponse,
  GetApiGameByGameIdData,
  GetApiGameByGameIdError,
  GetApiGameByGameIdResponse,
  GetApiGamesData,
  GetApiGamesError,
  GetApiGamesResponse,
  PostApiGameData,
  PostApiGameError,
  PostApiGameResponse,
  PostApiGameByGameIdJoinByPlayerIdData,
  PostApiGameByGameIdJoinByPlayerIdError,
  PostApiGameByGameIdJoinByPlayerIdResponse,
  PostApiGameByGameIdMakeMoveByPlayerIdData,
  PostApiGameByGameIdMakeMoveByPlayerIdError,
  PostApiGameByGameIdMakeMoveByPlayerIdResponse,
  GetHealthData,
  GetHealthError,
  GetHealthResponse,
  PostApiPlayersData,
  PostApiPlayersError,
  PostApiPlayersResponse,
} from "./types.gen";

export const client = createClient(createConfig());

/**
 * Get auth user information
 */
export const getApiAuthInfo = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiAuthInfoData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiAuthInfoResponse,
    GetApiAuthInfoError,
    ThrowOnError
  >({
    ...options,
    url: "/api/auth/info",
  });
};

/**
 * Get information about game by game id
 */
export const getApiGameByGameId = <ThrowOnError extends boolean = false>(
  options: Options<GetApiGameByGameIdData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiGameByGameIdResponse,
    GetApiGameByGameIdError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/{gameId}",
  });
};

/**
 * Get all games, which are available to join
 */
export const getApiGames = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiGamesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetApiGamesResponse,
    GetApiGamesError,
    ThrowOnError
  >({
    ...options,
    url: "/api/games",
  });
};

/**
 * Create new game
 */
export const postApiGame = <ThrowOnError extends boolean = false>(
  options: Options<PostApiGameData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostApiGameResponse,
    PostApiGameError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game",
  });
};

/**
 * Join game
 */
export const postApiGameByGameIdJoinByPlayerId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiGameByGameIdJoinByPlayerIdData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostApiGameByGameIdJoinByPlayerIdResponse,
    PostApiGameByGameIdJoinByPlayerIdError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/{gameId}/join/{playerId}",
  });
};

/**
 * Make move in a game
 */
export const postApiGameByGameIdMakeMoveByPlayerId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostApiGameByGameIdMakeMoveByPlayerIdData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostApiGameByGameIdMakeMoveByPlayerIdResponse,
    PostApiGameByGameIdMakeMoveByPlayerIdError,
    ThrowOnError
  >({
    ...options,
    url: "/api/game/{gameId}/make-move/{playerId}",
  });
};

/**
 * Health check endpoint
 */
export const getHealth = <ThrowOnError extends boolean = false>(
  options?: Options<GetHealthData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetHealthResponse,
    GetHealthError,
    ThrowOnError
  >({
    ...options,
    url: "/health",
  });
};

/**
 * Create new player
 */
export const postApiPlayers = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiPlayersData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostApiPlayersResponse,
    PostApiPlayersError,
    ThrowOnError
  >({
    ...options,
    url: "/api/players",
  });
};
