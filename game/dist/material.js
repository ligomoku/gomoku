import { opposite } from 'chessground/util';
const ROLES = {
    p: 'pawn',
    n: 'knight',
    b: 'bishop',
    r: 'rook',
    q: 'queen',
    k: 'king',
};
export function getMaterialDiff(fenLike) {
    const diff = {
        white: { king: 0, queen: 0, rook: 0, bishop: 0, knight: 0, pawn: 0 },
        black: { king: 0, queen: 0, rook: 0, bishop: 0, knight: 0, pawn: 0 },
    };
    for (let i = 0, part = 0; i < fenLike.length && part < 8; i++) {
        const ch = fenLike[i];
        const lower = ch.toLowerCase();
        const role = ROLES[lower];
        if (role) {
            const color = ch == lower ? 'black' : 'white';
            const them = diff[opposite(color)];
            if (them[role] > 0)
                them[role]--;
            else
                diff[color][role]++;
        }
        else if (ch == '[' || ch == ' ')
            break;
        else if (ch == '/')
            part++;
    }
    return diff;
}
export function getScore(diff) {
    return ((diff.white.queen - diff.black.queen) * 9 +
        (diff.white.rook - diff.black.rook) * 5 +
        (diff.white.bishop - diff.black.bishop) * 3 +
        (diff.white.knight - diff.black.knight) * 3 +
        (diff.white.pawn - diff.black.pawn));
}
export const NO_CHECKS = {
    white: 0,
    black: 0,
};
export function countChecks(steps, ply) {
    const checks = { ...NO_CHECKS };
    for (const step of steps) {
        if (ply < step.ply)
            break;
        if (step.check) {
            if (step.ply % 2 === 1)
                checks.white++;
            else
                checks.black++;
        }
    }
    return checks;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0ZXJpYWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbWF0ZXJpYWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRzVDLE1BQU0sS0FBSyxHQUEyQztJQUNwRCxDQUFDLEVBQUUsTUFBTTtJQUNULENBQUMsRUFBRSxRQUFRO0lBQ1gsQ0FBQyxFQUFFLFFBQVE7SUFDWCxDQUFDLEVBQUUsTUFBTTtJQUNULENBQUMsRUFBRSxPQUFPO0lBQ1YsQ0FBQyxFQUFFLE1BQU07Q0FDVixDQUFDO0FBRUYsTUFBTSxVQUFVLGVBQWUsQ0FBQyxPQUFlO0lBQzdDLE1BQU0sSUFBSSxHQUFpQjtRQUN6QixLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRTtRQUNwRSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRTtLQUNyRSxDQUFDO0lBQ0YsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sSUFBSSxJQUFJLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzdELE1BQU0sRUFBRSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QixNQUFNLEtBQUssR0FBRyxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDL0IsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzFCLElBQUksSUFBSSxFQUFFO1lBQ1IsTUFBTSxLQUFLLEdBQUcsRUFBRSxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7WUFDOUMsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ25DLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7Z0JBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7O2dCQUM1QixJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztTQUMxQjthQUFNLElBQUksRUFBRSxJQUFJLEdBQUcsSUFBSSxFQUFFLElBQUksR0FBRztZQUFFLE1BQU07YUFDcEMsSUFBSSxFQUFFLElBQUksR0FBRztZQUFFLElBQUksRUFBRSxDQUFDO0tBQzVCO0lBQ0QsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQsTUFBTSxVQUFVLFFBQVEsQ0FBQyxJQUFrQjtJQUN6QyxPQUFPLENBQ0wsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7UUFDekMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7UUFDdkMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7UUFDM0MsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7UUFDM0MsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUNwQyxDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBZTtJQUNuQyxLQUFLLEVBQUUsQ0FBQztJQUNSLEtBQUssRUFBRSxDQUFDO0NBQ1QsQ0FBQztBQUVGLE1BQU0sVUFBVSxXQUFXLENBQUMsS0FBbUIsRUFBRSxHQUFRO0lBQ3ZELE1BQU0sTUFBTSxHQUFlLEVBQUUsR0FBRyxTQUFTLEVBQUUsQ0FBQztJQUM1QyxLQUFLLE1BQU0sSUFBSSxJQUFJLEtBQUssRUFBRTtRQUN4QixJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRztZQUFFLE1BQU07UUFDMUIsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsSUFBSSxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO2dCQUFFLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7Z0JBQ2xDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztTQUNyQjtLQUNGO0lBQ0QsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNnIGZyb20gJ2NoZXNzZ3JvdW5kL3R5cGVzJztcbmltcG9ydCB7IG9wcG9zaXRlIH0gZnJvbSAnY2hlc3Nncm91bmQvdXRpbCc7XG5pbXBvcnQgeyBDaGVja0NvdW50LCBDaGVja1N0YXRlLCBNYXRlcmlhbERpZmYgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuXG5jb25zdCBST0xFUzogeyBba2V5OiBzdHJpbmddOiBjZy5Sb2xlIHwgdW5kZWZpbmVkIH0gPSB7XG4gIHA6ICdwYXduJyxcbiAgbjogJ2tuaWdodCcsXG4gIGI6ICdiaXNob3AnLFxuICByOiAncm9vaycsXG4gIHE6ICdxdWVlbicsXG4gIGs6ICdraW5nJyxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRNYXRlcmlhbERpZmYoZmVuTGlrZTogc3RyaW5nKTogTWF0ZXJpYWxEaWZmIHtcbiAgY29uc3QgZGlmZjogTWF0ZXJpYWxEaWZmID0ge1xuICAgIHdoaXRlOiB7IGtpbmc6IDAsIHF1ZWVuOiAwLCByb29rOiAwLCBiaXNob3A6IDAsIGtuaWdodDogMCwgcGF3bjogMCB9LFxuICAgIGJsYWNrOiB7IGtpbmc6IDAsIHF1ZWVuOiAwLCByb29rOiAwLCBiaXNob3A6IDAsIGtuaWdodDogMCwgcGF3bjogMCB9LFxuICB9O1xuICBmb3IgKGxldCBpID0gMCwgcGFydCA9IDA7IGkgPCBmZW5MaWtlLmxlbmd0aCAmJiBwYXJ0IDwgODsgaSsrKSB7XG4gICAgY29uc3QgY2ggPSBmZW5MaWtlW2ldO1xuICAgIGNvbnN0IGxvd2VyID0gY2gudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zdCByb2xlID0gUk9MRVNbbG93ZXJdO1xuICAgIGlmIChyb2xlKSB7XG4gICAgICBjb25zdCBjb2xvciA9IGNoID09IGxvd2VyID8gJ2JsYWNrJyA6ICd3aGl0ZSc7XG4gICAgICBjb25zdCB0aGVtID0gZGlmZltvcHBvc2l0ZShjb2xvcildO1xuICAgICAgaWYgKHRoZW1bcm9sZV0gPiAwKSB0aGVtW3JvbGVdLS07XG4gICAgICBlbHNlIGRpZmZbY29sb3JdW3JvbGVdKys7XG4gICAgfSBlbHNlIGlmIChjaCA9PSAnWycgfHwgY2ggPT0gJyAnKSBicmVhaztcbiAgICBlbHNlIGlmIChjaCA9PSAnLycpIHBhcnQrKztcbiAgfVxuICByZXR1cm4gZGlmZjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNjb3JlKGRpZmY6IE1hdGVyaWFsRGlmZik6IG51bWJlciB7XG4gIHJldHVybiAoXG4gICAgKGRpZmYud2hpdGUucXVlZW4gLSBkaWZmLmJsYWNrLnF1ZWVuKSAqIDkgK1xuICAgIChkaWZmLndoaXRlLnJvb2sgLSBkaWZmLmJsYWNrLnJvb2spICogNSArXG4gICAgKGRpZmYud2hpdGUuYmlzaG9wIC0gZGlmZi5ibGFjay5iaXNob3ApICogMyArXG4gICAgKGRpZmYud2hpdGUua25pZ2h0IC0gZGlmZi5ibGFjay5rbmlnaHQpICogMyArXG4gICAgKGRpZmYud2hpdGUucGF3biAtIGRpZmYuYmxhY2sucGF3bilcbiAgKTtcbn1cblxuZXhwb3J0IGNvbnN0IE5PX0NIRUNLUzogQ2hlY2tDb3VudCA9IHtcbiAgd2hpdGU6IDAsXG4gIGJsYWNrOiAwLFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNvdW50Q2hlY2tzKHN0ZXBzOiBDaGVja1N0YXRlW10sIHBseTogUGx5KTogQ2hlY2tDb3VudCB7XG4gIGNvbnN0IGNoZWNrczogQ2hlY2tDb3VudCA9IHsgLi4uTk9fQ0hFQ0tTIH07XG4gIGZvciAoY29uc3Qgc3RlcCBvZiBzdGVwcykge1xuICAgIGlmIChwbHkgPCBzdGVwLnBseSkgYnJlYWs7XG4gICAgaWYgKHN0ZXAuY2hlY2spIHtcbiAgICAgIGlmIChzdGVwLnBseSAlIDIgPT09IDEpIGNoZWNrcy53aGl0ZSsrO1xuICAgICAgZWxzZSBjaGVja3MuYmxhY2srKztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGNoZWNrcztcbn1cbiJdfQ==